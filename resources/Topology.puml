@startuml
'https://plantuml.com/class-diagram

hide circle
'skinparam linetype polyline
skinparam linetype ortho

package robot {
    class "EV3 Robot" as robot_class
}

package server {
    class "EV3 Controller" as ev3
    class "REST API" as rest

    rest --> ev3 : Commands
}

note right of server
    The EV3 RPYC Python
    script needs to be run on
    an older version of Python
end note

ev3 --> robot_class : RPYC Calls

package client {
    package AI {
        class "main" as ai_class
        class "Training" as ai_train_class
        class "Model Testing" as ai_testing_class

        ai_class --> ai_testing_class : Save Results to File
    }

    package Services {
        class "Robot AI" as ai_service
        class "Robot API" as api_service
    }

    package Utils {
        class "Logging" as logging_util
        class "Math Helpers" as math_util
        class "OpenCV Helpers" as opencv_util
    }

    package Core {
        class "Driving Algorithm" as drivealg
        class "Path Algorithm" as pathalg
        class "Robot Racing" as robot_racing
        class "Track Setup" as tracksetup
    }

    class "main" as client_main

    client_main --> ai_class : Run AI
    client_main --> tracksetup : Setup Track
    client_main --> api_service : Start and Stop Robot
    client_main --> robot_racing : Start Race
    client_main --> logging_util : Get Logger

    robot_racing --> ai_service : Get AI results
    robot_racing -> pathalg : Get Paths for balls
    robot_racing --> drivealg : Drive to path

    pathalg --> math_util : Math functions
    drivealg --> math_util : Math functions
    ai_service ---> opencv_util : OpenCV functions
    tracksetup --> opencv_util : OpenCV functions
    tracksetup -right-> pathalg : Create Track

    drivealg ---> api_service : Drive commands

    ai_service ---> ai_class : Get AI Results
}

api_service ---> rest : REST API calls


@enduml